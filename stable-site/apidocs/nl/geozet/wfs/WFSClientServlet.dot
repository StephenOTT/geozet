#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.3 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// nl.geozet.common.ServletBase
	c342 [label=<<table title="nl.geozet.common.ServletBase" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../common/ServletBase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> ServletBase </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # itemsPerPage : int </td></tr>
<tr><td align="left" balign="left"> # _RESOURCES : CoreResources </td></tr>
<tr><td align="left" balign="left"> # _BEKENDMAKINGEN : String </td></tr>
<tr><td align="left" balign="left"> # _BEKENDMAKINGDETAIL : String </td></tr>
<tr><td align="left" balign="left"> # _BEKENDMAKINGENVLAK : String </td></tr>
<tr><td align="left" balign="left"> # _LOCATIE : String </td></tr>
<tr><td align="left" balign="left"> # _GEOZET : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServletBase() </td></tr>
<tr><td align="left" balign="left"> + init(config : ServletConfig) </td></tr>
<tr><td align="left" balign="left"> # buildQueryString(request : HttpServletRequest, excludeparam : String) : String </td></tr>
<tr><td align="left" balign="left"> # buildPageList(items : int, request : HttpServletRequest) : String </td></tr>
<tr><td align="left" balign="left"> + featureAttribuutCheck(input : Object) : String </td></tr>
<tr><td align="left" balign="left"> + parseInitParam(config : ServletConfig, s : String, dflt : double) : double </td></tr>
<tr><td align="left" balign="left"> # doHead(req : HttpServletRequest, resp : HttpServletResponse) </td></tr>
<tr><td align="left" balign="left"> # doPut(req : HttpServletRequest, resp : HttpServletResponse) </td></tr>
<tr><td align="left" balign="left"> # doDelete(req : HttpServletRequest, resp : HttpServletResponse) </td></tr>
<tr><td align="left" balign="left"> # doOptions(req : HttpServletRequest, resp : HttpServletResponse) </td></tr>
<tr><td align="left" balign="left"> # doTrace(req : HttpServletRequest, resp : HttpServletResponse) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// Note annotation
	n0cc342 [label=<<table title="nl.geozet.common.ServletBase" border="0" cellborder="0" cellspacing="0" cellpadding="2" port="p" href="../common/ServletBase.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> gedeelde basis voor de geozet servlets </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0, shape=note];
	n0cc342 -> c342:p[arrowhead=none];
	// nl.geozet.wfs.WFSDetailsServlet
	c354 [label=<<table title="nl.geozet.wfs.WFSDetailsServlet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WFSDetailsServlet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WFSDetailsServlet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WFSDetailsServlet() </td></tr>
<tr><td align="left" balign="left"> + init(config : ServletConfig) </td></tr>
<tr><td align="left" balign="left"> # service(request : HttpServletRequest, response : HttpServletResponse) </td></tr>
<tr><td align="left" balign="left"> # renderHTMLResults(request : HttpServletRequest, response : HttpServletResponse, f : SimpleFeature) </td></tr>
<tr><td align="left" balign="left"> # ophalenBekendmaking(filter : Filter) : SimpleFeature </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// Note annotation
	n0cc354 [label=<<table title="nl.geozet.wfs.WFSDetailsServlet" border="0" cellborder="0" cellspacing="0" cellpadding="2" port="p" href="./WFSDetailsServlet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> zoeken en tonen van de details van een bekendmaking </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0, shape=note];
	n0cc354 -> c354:p[arrowhead=none];
	// nl.geozet.wfs.WFSClientServlet
	c355 [label=<<table title="nl.geozet.wfs.WFSClientServlet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./WFSClientServlet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WFSClientServlet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # schema : SimpleFeatureType </td></tr>
<tr><td align="left" balign="left"> # source : SimpleFeatureSource </td></tr>
<tr><td align="left" balign="left"> # typeName : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + WFSClientServlet() </td></tr>
<tr><td align="left" balign="left"> # service(request : HttpServletRequest, response : HttpServletResponse) </td></tr>
<tr><td align="left" balign="left"> + init(config : ServletConfig) </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> # ophalenBekendmakingen(filter : Filter, xcoord : double, ycoord : double) : Vector&lt;SimpleFeature&gt; </td></tr>
<tr><td align="left" balign="left"> # renderHTMLResults(request : HttpServletRequest, response : HttpServletResponse, results : Vector&lt;SimpleFeature&gt;) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// Note annotation
	n0cc355 [label=<<table title="nl.geozet.wfs.WFSClientServlet" border="0" cellborder="0" cellspacing="0" cellpadding="2" port="p" href="./WFSClientServlet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> zoeken en tonen van punt bekendmakingen </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0, shape=note];
	n0cc355 -> c355:p[arrowhead=none];
	// nl.geozet.wfs.VlakGerichteWFSClientServlet
	c356 [label=<<table title="nl.geozet.wfs.VlakGerichteWFSClientServlet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VlakGerichteWFSClientServlet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VlakGerichteWFSClientServlet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VlakGerichteWFSClientServlet() </td></tr>
<tr><td align="left" balign="left"> + init(config : ServletConfig) </td></tr>
<tr><td align="left" balign="left"> # service(request : HttpServletRequest, response : HttpServletResponse) </td></tr>
<tr><td align="left" balign="left"> # ophalenBekendmakingen(filter : Filter, xcoord : double, ycoord : double) : Vector&lt;SimpleFeature&gt; </td></tr>
<tr><td align="left" balign="left"> # renderHTMLResults(request : HttpServletRequest, response : HttpServletResponse, results : Vector&lt;SimpleFeature&gt;) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// Note annotation
	n0cc356 [label=<<table title="nl.geozet.wfs.VlakGerichteWFSClientServlet" border="0" cellborder="0" cellspacing="0" cellpadding="2" port="p" href="./VlakGerichteWFSClientServlet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> zoeken en tonen van vlak bekendmakingen </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0, shape=note];
	n0cc356 -> c356:p[arrowhead=none];
	//nl.geozet.wfs.WFSDetailsServlet extends nl.geozet.wfs.WFSClientServlet
	c355:p -> c354:p [dir=back,arrowtail=empty];
	//nl.geozet.wfs.WFSClientServlet extends nl.geozet.common.ServletBase
	c342:p -> c355:p [dir=back,arrowtail=empty];
	//nl.geozet.wfs.VlakGerichteWFSClientServlet extends nl.geozet.wfs.WFSClientServlet
	c355:p -> c356:p [dir=back,arrowtail=empty];
	// nl.geozet.wfs.WFSClientServlet NAVASSOC com.vividsolutions.jts.geom.GeometryFactory
	c355:p -> c357:p [taillabel="", label="", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.vividsolutions.jts.geom.GeometryFactory
	c357 [label=<<table title="com.vividsolutions.jts.geom.GeometryFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GeometryFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : PrecisionModel, arg1 : int, arg2 : CoordinateSequenceFactory) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : CoordinateSequenceFactory) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : PrecisionModel) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : PrecisionModel, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory() </td></tr>
<tr><td align="left" balign="left"> + createPointFromInternalCoord(arg0 : Coordinate, arg1 : Geometry) : Point </td></tr>
<tr><td align="left" balign="left"> + toPointArray(arg0 : Collection&lt;&gt;) : Point[] </td></tr>
<tr><td align="left" balign="left"> + toGeometryArray(arg0 : Collection&lt;&gt;) : Geometry[] </td></tr>
<tr><td align="left" balign="left"> + toLinearRingArray(arg0 : Collection&lt;&gt;) : LinearRing[] </td></tr>
<tr><td align="left" balign="left"> + toLineStringArray(arg0 : Collection&lt;&gt;) : LineString[] </td></tr>
<tr><td align="left" balign="left"> + toPolygonArray(arg0 : Collection&lt;&gt;) : Polygon[] </td></tr>
<tr><td align="left" balign="left"> + toMultiPolygonArray(arg0 : Collection&lt;&gt;) : MultiPolygon[] </td></tr>
<tr><td align="left" balign="left"> + toMultiLineStringArray(arg0 : Collection&lt;&gt;) : MultiLineString[] </td></tr>
<tr><td align="left" balign="left"> + toMultiPointArray(arg0 : Collection&lt;&gt;) : MultiPoint[] </td></tr>
<tr><td align="left" balign="left"> + toGeometry(arg0 : Envelope) : Geometry </td></tr>
<tr><td align="left" balign="left"> + getPrecisionModel() : PrecisionModel </td></tr>
<tr><td align="left" balign="left"> + createPoint(arg0 : Coordinate) : Point </td></tr>
<tr><td align="left" balign="left"> + createPoint(arg0 : CoordinateSequence) : Point </td></tr>
<tr><td align="left" balign="left"> + createMultiLineString(arg0 : LineString[]) : MultiLineString </td></tr>
<tr><td align="left" balign="left"> + createGeometryCollection(arg0 : Geometry[]) : GeometryCollection </td></tr>
<tr><td align="left" balign="left"> + createMultiPolygon(arg0 : Polygon[]) : MultiPolygon </td></tr>
<tr><td align="left" balign="left"> + createLinearRing(arg0 : Coordinate[]) : LinearRing </td></tr>
<tr><td align="left" balign="left"> + createLinearRing(arg0 : CoordinateSequence) : LinearRing </td></tr>
<tr><td align="left" balign="left"> + createMultiPoint(arg0 : Point[]) : MultiPoint </td></tr>
<tr><td align="left" balign="left"> + createMultiPoint(arg0 : Coordinate[]) : MultiPoint </td></tr>
<tr><td align="left" balign="left"> + createMultiPoint(arg0 : CoordinateSequence) : MultiPoint </td></tr>
<tr><td align="left" balign="left"> + createPolygon(arg0 : LinearRing, arg1 : LinearRing[]) : Polygon </td></tr>
<tr><td align="left" balign="left"> + buildGeometry(arg0 : Collection&lt;&gt;) : Geometry </td></tr>
<tr><td align="left" balign="left"> + createLineString(arg0 : Coordinate[]) : LineString </td></tr>
<tr><td align="left" balign="left"> + createLineString(arg0 : CoordinateSequence) : LineString </td></tr>
<tr><td align="left" balign="left"> + createGeometry(arg0 : Geometry) : Geometry </td></tr>
<tr><td align="left" balign="left"> + getSRID() : int </td></tr>
<tr><td align="left" balign="left"> + getCoordinateSequenceFactory() : CoordinateSequenceFactory </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

